{"meta":{"title":"昌久个人博客","subtitle":"我是子标题不知道说啥","description":"","author":"昌久","url":"https://githubbycj.github.io","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2020-05-30T12:16:27.435Z","updated":"2020-05-30T12:16:27.435Z","comments":false,"path":"/404.html","permalink":"https://githubbycj.github.io/404.html","excerpt":"","text":""},{"title":"关于","date":"2020-05-30T12:16:27.436Z","updated":"2020-05-30T12:16:27.436Z","comments":false,"path":"about/index.html","permalink":"https://githubbycj.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2020-05-30T12:16:27.436Z","updated":"2020-05-30T12:16:27.436Z","comments":false,"path":"books/index.html","permalink":"https://githubbycj.github.io/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-05-30T12:16:27.437Z","updated":"2020-05-30T12:16:27.437Z","comments":false,"path":"categories/index.html","permalink":"https://githubbycj.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-05-30T12:16:27.437Z","updated":"2020-05-30T12:16:27.437Z","comments":true,"path":"links/index.html","permalink":"https://githubbycj.github.io/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-05-30T12:16:27.438Z","updated":"2020-05-30T12:16:27.438Z","comments":false,"path":"tags/index.html","permalink":"https://githubbycj.github.io/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2020-05-30T12:16:27.437Z","updated":"2020-05-30T12:16:27.437Z","comments":false,"path":"repository/index.html","permalink":"https://githubbycj.github.io/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"怎样创建hexo 的博客","slug":"create-hexo-file","date":"2020-05-30T14:16:58.000Z","updated":"2020-05-30T14:26:46.788Z","comments":true,"path":"2020/05/30/create-hexo-file/","link":"","permalink":"https://githubbycj.github.io/2020/05/30/create-hexo-file/","excerpt":"","text":"步骤一打开命令行（我这里用的是windows 系统 用cmd 命令行） 1$ hexo new \"这里输入一个文件的名称（一般用英文）\" 步骤二在部署目录 hexo/source/_posts/ 文件夹下找到刚刚的文件以.md 结尾，然后对它进行编辑(需要熟悉markdown 语法) 步骤三编辑完成后 输入命令 123$ hexo clean ##清空缓存信息$ hexo generate ## 根据.md 格式的文件生成hexo 需要的html 静态网页$ hexo deploy ## 发布到GitHub上","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://githubbycj.github.io/tags/Hexo/"}]},{"title":"如何删除Hexo 发布博客","slug":"delete-hexo-file","date":"2020-05-30T14:06:09.000Z","updated":"2020-05-30T14:12:08.890Z","comments":true,"path":"2020/05/30/delete-hexo-file/","link":"","permalink":"https://githubbycj.github.io/2020/05/30/delete-hexo-file/","excerpt":"","text":"如何删除Hexo发布的文章进入hexo 的根目录然后进入source/_posts 文件夹下，找到需要删除的 .md文件删除 执行命令重新生成发布就好 123&gt; hexo clean&gt; hexo generate&gt; hexo deploy","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://githubbycj.github.io/tags/Hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-05-30T09:36:22.257Z","updated":"2020-05-30T09:36:22.257Z","comments":true,"path":"2020/05/30/hello-world/","link":"","permalink":"https://githubbycj.github.io/2020/05/30/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"使用Nuget 安装 SQLite 小型数据库","slug":"use-nuget-install-sqlite","date":"2017-10-29T14:07:04.000Z","updated":"2020-05-30T15:41:13.456Z","comments":true,"path":"2017/10/29/use-nuget-install-sqlite/","link":"","permalink":"https://githubbycj.github.io/2017/10/29/use-nuget-install-sqlite/","excerpt":"","text":"说明记录一下 使用Nuget 安装 SQLite 小型数据库，并记录使用示例 操作步骤如下第1步 下载安装方式 去nuget 直接下载System.Data.SQLite.dll然后引用 在VS 工具 –&gt; Nuget包管理器 –&gt; 程序包管理器控制台 安装dll12# 输入命令安装，也可以使用可视化工具安装Install-Package System.Data.SQLite -Version 1.0.105.2 第2步 新建Sqlite 数据库 使用CodeFirst 创建实体类 要求和表的字段一一对应 其他特性不列举1234567891011121314&#x2F;&#x2F;&#x2F; &lt;summary&gt;&#x2F;&#x2F;&#x2F; 实体类&#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;[Table(&quot;表名&quot;)]public class TestTable&#123; [Key] public String guid &#123; get; set; &#125; public String field01 &#123;get; set;&#125; public String field02 &#123;get; set;&#125; &#x2F;&#x2F;。。。。&#125; 新建ConnectionString链接信息和DBContext类 123456789101112&lt;!-- app.config 配置--&gt;&lt;!-- 更改或添加providers --&gt; &lt;providers&gt; &lt;provider invariantName=\"System.Data.SqlClient\" type=\"System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer\" /&gt; &lt;provider invariantName=\"System.Data.SQLite.EF6\" type=\"System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6\" /&gt; &lt;provider invariantName=\"System.Data.SQLite\" type=\"System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6 \" /&gt; &lt;/providers&gt;&lt;!-- 添加 connectionString --&gt;&lt;connectionStrings&gt; &lt;add name=\"SQLiteDbContext\" connectionString=\"Data Source=CarInfoDB.sqlite\" providerName=\"System.Data.SQLite.EF6\" /&gt;&lt;/connectionStrings&gt; 123456789//C# 代码配置 public class SQLiteDbContext : DbContext&#123; // 可以使用 base 指定链接名 ， 也可以不指定但类名 要和链接名一致 //public SQLiteDbContext() : base(\"SQLiteDbContext\") &#123; //&#125; public DbSet&lt;TestTable&gt; TestTableEntities &#123; get; set; &#125;&#125; 第3步 测试是否自动生成sqlite数据库12345public void TestConn() &#123; SQLiteDbContext dbCxt = new SQLiteDbContext(); var res = dbCxt.TestTableEntities.Where(m =&gt; true).Count(); System.Console.WriteLine(res);&#125;","categories":[],"tags":[{"name":"C#","slug":"C","permalink":"https://githubbycj.github.io/tags/C/"}]},{"title":"PL/SQL Developer 远程链接 Oracle 数据库","slug":"plsql-Developer-connect-oracle","date":"2016-12-12T04:13:23.000Z","updated":"2020-05-30T15:11:20.740Z","comments":true,"path":"2016/12/12/plsql-Developer-connect-oracle/","link":"","permalink":"https://githubbycj.github.io/2016/12/12/plsql-Developer-connect-oracle/","excerpt":"","text":"说明本机无需安装Oracle ， 只需要安装PL/SQL 和Oracle 驱动 即可远程链接Oracle 数据库 。 第1步 下载工具 pl/sql 工具官网 oracle 驱动包 官网 第2步 先安装pl/sql安装过程 略 第3步 解压oracle 驱动3.1 解压 instantclient_12_1 放到指定目录3.2 在instantclient_12_1 里面 新建文件夹 NETWORK/ADMIN/3.3 再新建一个文件 tnsnames.ora （这里注意tnsnames.org 是固定写法）文件内容配置oracle 链接信息 第4步 环境配置4.1 进入windows 环境变量配置4.2 配置信息如下：ORACLE_HOME = F:\\instantclient_12_1 //指定的目录TNS_ADMIN = F:\\instantclient_12_1\\NETWORK\\ADMIN //配置 tsn文件路径NLS_LANG = SIMPLIFIED CHINESE_CHINA.ZHS16GBK //配置编码在path 最后添加 %ORACLE_HOME% 第5步 配置PL/SQL5.1 打开pl/sql 菜单 Tools –&gt; Preferences 如图： 最后一步 重启PL/SQL6.1 重启pl/sql 查看databases 是否有tnsnames 的链接 ，有的话就配置成功了","categories":[],"tags":[{"name":"oracle","slug":"oracle","permalink":"https://githubbycj.github.io/tags/oracle/"}]}],"categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://githubbycj.github.io/tags/Hexo/"},{"name":"C#","slug":"C","permalink":"https://githubbycj.github.io/tags/C/"},{"name":"oracle","slug":"oracle","permalink":"https://githubbycj.github.io/tags/oracle/"}]}